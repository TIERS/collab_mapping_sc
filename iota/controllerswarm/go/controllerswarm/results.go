// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package controllerswarm
import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ImmutableCompareMapResults struct {
	id int32
}

func (s ImmutableCompareMapResults) Conflict() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxResultConflict])
}

type MutableCompareMapResults struct {
	id int32
}

func (s MutableCompareMapResults) Conflict() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxResultConflict])
}

type ImmutableGetMissionResults struct {
	id int32
}

func (s ImmutableGetMissionResults) Mission() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxResultMission])
}

type MutableGetMissionResults struct {
	id int32
}

func (s MutableGetMissionResults) Mission() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxResultMission])
}

type ImmutableGlobalMapResults struct {
	id int32
}

func (s ImmutableGlobalMapResults) GlobalMap() ImmutableOccupancyGrid {
	return ImmutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxResultGlobalMap]}
}

type MutableGlobalMapResults struct {
	id int32
}

func (s MutableGlobalMapResults) GlobalMap() MutableOccupancyGrid {
	return MutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxResultGlobalMap]}
}

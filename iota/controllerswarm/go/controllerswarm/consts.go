// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package controllerswarm

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

const (
	ScName        = "controllerswarm"
	ScDescription = "This smart contract is responsible to merge maps"
	HScName       = wasmlib.ScHname(0x598f2031)
)

const (
	ParamAgent          = wasmlib.Key("agent")
	ParamLength         = wasmlib.Key("length")
	ParamMap            = wasmlib.Key("map")
	ParamMap1           = wasmlib.Key("map1")
	ParamMap2           = wasmlib.Key("map2")
	ParamNoiseThreshold = wasmlib.Key("noiseThreshold")
	ParamWidth          = wasmlib.Key("width")
	ParamWindowSize     = wasmlib.Key("windowSize")
)

const (
	ResultConflict  = wasmlib.Key("conflict")
	ResultGlobalMap = wasmlib.Key("globalMap")
	ResultMission   = wasmlib.Key("mission")
)

const (
	StateAgents           = wasmlib.Key("agents")
	StateLength           = wasmlib.Key("length")
	StateMissions         = wasmlib.Key("missions")
	StateNoiseThreshold   = wasmlib.Key("noiseThreshold")
	StateSubMapAgent      = wasmlib.Key("subMapAgent")
	StateSubMapByzIndices = wasmlib.Key("subMapByzIndices")
	StateSubmittedMaps    = wasmlib.Key("submittedMaps")
	StateWidth            = wasmlib.Key("width")
	StateWindowSize       = wasmlib.Key("windowSize")
)

const (
	FuncCompareMap     = "compareMap"
	FuncInit           = "init"
	FuncRegister       = "register"
	FuncRequestMission = "requestMission"
	FuncSubmitMap      = "submitMap"
	ViewGetMission     = "getMission"
	ViewGlobalMap      = "globalMap"
)

const (
	HFuncCompareMap     = wasmlib.ScHname(0xb839b491)
	HFuncInit           = wasmlib.ScHname(0x1f44d644)
	HFuncRegister       = wasmlib.ScHname(0x3f559b22)
	HFuncRequestMission = wasmlib.ScHname(0xa08db104)
	HFuncSubmitMap      = wasmlib.ScHname(0x1f3d394c)
	HViewGetMission     = wasmlib.ScHname(0x0b183a65)
	HViewGlobalMap      = wasmlib.ScHname(0x85735755)
)

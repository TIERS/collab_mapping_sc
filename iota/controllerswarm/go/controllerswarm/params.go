// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package controllerswarm
import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ImmutableCompareMapParams struct {
	id int32
}

func (s ImmutableCompareMapParams) Map1() ImmutableOccupancyGrid {
	return ImmutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap1]}
}

func (s ImmutableCompareMapParams) Map2() ImmutableOccupancyGrid {
	return ImmutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap2]}
}

type MutableCompareMapParams struct {
	id int32
}

func (s MutableCompareMapParams) Map1() MutableOccupancyGrid {
	return MutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap1]}
}

func (s MutableCompareMapParams) Map2() MutableOccupancyGrid {
	return MutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap2]}
}

type ImmutableInitParams struct {
	id int32
}

func (s ImmutableInitParams) Length() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxParamLength])
}

func (s ImmutableInitParams) NoiseThreshold() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxParamNoiseThreshold])
}

func (s ImmutableInitParams) Width() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxParamWidth])
}

func (s ImmutableInitParams) WindowSize() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, idxMap[IdxParamWindowSize])
}

type MutableInitParams struct {
	id int32
}

func (s MutableInitParams) Length() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxParamLength])
}

func (s MutableInitParams) NoiseThreshold() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxParamNoiseThreshold])
}

func (s MutableInitParams) Width() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxParamWidth])
}

func (s MutableInitParams) WindowSize() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, idxMap[IdxParamWindowSize])
}

type ImmutableRegisterParams struct {
	id int32
}

func (s ImmutableRegisterParams) Agent() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxParamAgent])
}

type MutableRegisterParams struct {
	id int32
}

func (s MutableRegisterParams) Agent() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxParamAgent])
}

type ImmutableRequestMissionParams struct {
	id int32
}

func (s ImmutableRequestMissionParams) Agent() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxParamAgent])
}

type MutableRequestMissionParams struct {
	id int32
}

func (s MutableRequestMissionParams) Agent() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxParamAgent])
}

type ImmutableSubmitMapParams struct {
	id int32
}

func (s ImmutableSubmitMapParams) Agent() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxParamAgent])
}

func (s ImmutableSubmitMapParams) Map() ImmutableOccupancyGrid {
	return ImmutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap]}
}

type MutableSubmitMapParams struct {
	id int32
}

func (s MutableSubmitMapParams) Agent() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxParamAgent])
}

func (s MutableSubmitMapParams) Map() MutableOccupancyGrid {
	return MutableOccupancyGrid{objID: s.id, keyID: idxMap[IdxParamMap]}
}

type ImmutableGetMissionParams struct {
	id int32
}

func (s ImmutableGetMissionParams) Agent() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxParamAgent])
}

type MutableGetMissionParams struct {
	id int32
}

func (s MutableGetMissionParams) Agent() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxParamAgent])
}
